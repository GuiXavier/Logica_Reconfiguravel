// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "03/31/2025 08:49:27"

// 
// Device: Altera 10M50DAF484C6GES Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module porta_and (
	X,
	A,
	B);
output 	X;
input 	A;
input 	B;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \X~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \inst~combout ;


fiftyfivenm_io_obuf \X~output (
	.i(\inst~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\X~output_o ),
	.obar());
// synopsys translate_off
defparam \X~output .bus_hold = "false";
defparam \X~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .listen_to_nsleep_signal = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .listen_to_nsleep_signal = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_lcell_comb inst(
// Equation(s):
// \inst~combout  = (\A~input_o  & \B~input_o )

	.dataa(\A~input_o ),
	.datab(\B~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~combout ),
	.cout());
// synopsys translate_off
defparam inst.lut_mask = 16'h8888;
defparam inst.sum_lutc_input = "datac";
// synopsys translate_on

assign X = \X~output_o ;

endmodule
